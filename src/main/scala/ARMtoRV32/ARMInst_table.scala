package ARMtoRV32

import Chisel._
import scala.collection.mutable.ArrayBuffer

object MIPS_Instructions {
	val Instructions = Map(

	   "SLL"                    -> BitPat("b000000????????????????????000000"),
	   "MOVCI"                  -> BitPat("b000000????????????????????000001"),
	   "SRL"                    -> BitPat("b000000????????????????????000010"),
	   "SRA"                    -> BitPat("b000000????????????????????000011"),
	   "SLLV"                   -> BitPat("b000000????????????????????000100"),
	 
	   "SRLV"                   -> BitPat("b000000????????????????????000110"),
	   "SRAV"                   -> BitPat("b000000????????????????????000111"),
	   "JR"                     -> BitPat("b000000????????????????????001000"),
	   "JALR"                   -> BitPat("b000000????????????????????001001"),
	   "MOVZ"                   -> BitPat("b000000????????????????????001010"),
	   "MOVN"                   -> BitPat("b000000????????????????????001011"),
	   "SYSCALL"                -> BitPat("b000000????????????????????001100"),
	   "BREAK"                  -> BitPat("b000000????????????????????001101"),
	 
	   "SYNC"                   -> BitPat("b000000????????????????????001111"),
	   "MFHI"                   -> BitPat("b000000????????????????????010000"),
	   "MFLO"                   -> BitPat("b000000????????????????????010001"),
	   "DSLLV"                  -> BitPat("b000000????????????????????010010"),
	 
	   "DSRLV"                  -> BitPat("b000000????????????????????010100"),
	   "DSRAV"                  -> BitPat("b000000????????????????????010101"),
	   "MULT"                   -> BitPat("b000000????????????????????010110"),
	   "MULTU"                  -> BitPat("b000000????????????????????010111"),
	   "DIV"                    -> BitPat("b000000????????????????????011000"),
	   "DIVU"                   -> BitPat("b000000????????????????????011001"),
	   "DMULTU"                 -> BitPat("b000000????????????????????011010"),
	   "DDIV"                   -> BitPat("b000000????????????????????011011"),
	   "DDIVU"                  -> BitPat("b000000????????????????????011100"),
	   "ADD"                    -> BitPat("b000000????????????????????011101"),
	   "ADDU"                   -> BitPat("b000000????????????????????011110"),
	   "SUB"                    -> BitPat("b000000????????????????????011111"),
	   "SUBU"                   -> BitPat("b000000????????????????????100000"),
	   "AND"                    -> BitPat("b000000????????????????????100001"),
	   "OR"                     -> BitPat("b000000????????????????????100010"),
	   "XOR"                    -> BitPat("b000000????????????????????100011"),
	   "NOR"                    -> BitPat("b000000????????????????????100100"),
	 

	   "SLT"                    -> BitPat("b000000????????????????????100110"),
	   "SLTU"                   -> BitPat("b000000????????????????????100111"),
	   "DADD"                   -> BitPat("b000000????????????????????101000"),
	   "DADDU"                  -> BitPat("b000000????????????????????101001"),
	   "DSUB"                   -> BitPat("b000000????????????????????101010"),
	   "DSUBU"                  -> BitPat("b000000????????????????????101011"),
	   "TGE"                    -> BitPat("b000000????????????????????101100"),
	   "TGEU"                   -> BitPat("b000000????????????????????101101"),
	   "TLT"                    -> BitPat("b000000????????????????????101110"),
	   "TLTU"                   -> BitPat("b000000????????????????????101111"),
	   "TEQ"                    -> BitPat("b000000????????????????????110000"),
	 
	   "TNE"                    -> BitPat("b000000????????????????????110010"),
	   "DSLL"                   -> BitPat("b000000????????????????????110011"),
	 
	   "DSRL"                   -> BitPat("b000000????????????????????110101"),
	   "DSRA"                   -> BitPat("b000000????????????????????110110"),
	   "DSLL32"                 -> BitPat("b000000????????????????????110111"),

	   "DSRL32"                 -> BitPat("b000000????????????????????111000"),
	   "DSRA32"                 -> BitPat("b000000????????????????????111001"),

	   "BLTZ"                   -> BitPat("b000001?????00000????????????????"),
	   "BGEZ"                   -> BitPat("b000001?????00001????????????????"),
	   "BLTZL"                  -> BitPat("b000001?????00010????????????????"),
	   "BGEZL"                  -> BitPat("b000001?????00011????????????????"),




	   "TGEI"                   -> BitPat("b000001?????01000????????????????"),
	   "TGEIU"                  -> BitPat("b000001?????01001????????????????"),
	   "TLTI"                   -> BitPat("b000001?????01010????????????????"),
	   "TLTIU"                  -> BitPat("b000001?????01011????????????????"),
	   "TEQI"                   -> BitPat("b000001?????01100????????????????"),

	   "TNEI"                   -> BitPat("b000001?????01110????????????????"),

	   "BLTZAL"                 -> BitPat("b000001?????10000????????????????"),
	   "BGEZAL"                 -> BitPat("b000001?????10001????????????????"),
	   "BLTZALL"                -> BitPat("b000001?????10010????????????????"),
	   "BGEZALL"                -> BitPat("b000001?????10011????????????????"),

	   "J"                      -> BitPat("b000010??????????????????????????"),
	   "JAL"                    -> BitPat("b000011??????????????????????????"),
	   "BEQ"                    -> BitPat("b000100??????????????????????????"),
	   "BNE"                    -> BitPat("b000101??????????????????????????"),
	   "BLEZ"                   -> BitPat("b000110??????????????????????????"),
	   "BGTZ"                   -> BitPat("b000111??????????????????????????"),
	   "ADDI"                   -> BitPat("b001000??????????????????????????"),
	   "ADDIU"                  -> BitPat("b001001??????????????????????????"),
	   "SLTI"                   -> BitPat("b001010??????????????????????????"),
	   "SLTIU"                  -> BitPat("b001011??????????????????????????"),
	   "ANDI"                   -> BitPat("b001100??????????????????????????"),
	   "ORI"                    -> BitPat("b001101??????????????????????????"),
	   "XORI"                   -> BitPat("b001110??????????????????????????"),
	   "LUI"                    -> BitPat("b001111??????????????????????????"),
	   "BEQL"                   -> BitPat("b010000??????????????????????????"),
	   "BNEL"                   -> BitPat("b010001??????????????????????????"),
	   "BLEZL"                  -> BitPat("b010010??????????????????????????"),
	   "BGTZL"                  -> BitPat("b010011??????????????????????????"),
	   "DADDI"                  -> BitPat("b010100??????????????????????????"),
	   "DADDIU"                 -> BitPat("b010101??????????????????????????"),
	   "LDL"                    -> BitPat("b010110??????????????????????????"),
	   "LDR"                    -> BitPat("b010111??????????????????????????"),




	   "LB"                     -> BitPat("b100000??????????????????????????"),
	   "LH"                     -> BitPat("b100001??????????????????????????"),
	   "LWL"                    -> BitPat("b100010??????????????????????????"),
	   "LW"                     -> BitPat("b100011??????????????????????????"),
	   "LBU"                    -> BitPat("b100100??????????????????????????"),
	   "LHU"                    -> BitPat("b100101??????????????????????????"),
	   "LWR"                    -> BitPat("b100110??????????????????????????"),
	   "LWU"                    -> BitPat("b100111??????????????????????????"),
	   "SB"                     -> BitPat("b101000??????????????????????????"),
	   "SH"                     -> BitPat("b101001??????????????????????????"),
	   "SWL"                    -> BitPat("b101010??????????????????????????"),
	   "SW"                     -> BitPat("b101011??????????????????????????"),
	   "SDL"                    -> BitPat("b101100??????????????????????????"),
	   "SDR"                    -> BitPat("b101101??????????????????????????"),
	   "SWR"                    -> BitPat("b101110??????????????????????????"),

	   "LL"                     -> BitPat("b110000??????????????????????????"),


	   "PREF"                   -> BitPat("b110011??????????????????????????"),
	   "LLD"                    -> BitPat("b110100??????????????????????????"),


	   "LD"                     -> BitPat("b110111??????????????????????????"),
	   "SC"                     -> BitPat("b111000??????????????????????????"),
	 


	   "SCD"                    -> BitPat("b111100??????????????????????????"),
	  
	  
	   "SD"                     -> BitPat("b111111??????????????????????????")

	)
}
